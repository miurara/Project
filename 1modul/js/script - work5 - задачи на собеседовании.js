//ЗАДАЧИ С СОБЕСЕДОВАНИЙ

/*•	Какое будет выведено значение: let x = 5; alert( x++ ); ?
    Получим 5, т.к. постфиксная форма ++ возвращает нам сначала исходное значение, т.е. 5
    Если хотим увеличить число на 1, то нужно писать ++x */

/*Чему равно такое выражение: [ ] + false - null + true ?*/
// console.log([ ] + false); непонятно что за тип данных, поэтому
console.log(typeof ([] + falsе)); //пустой массив это всегда строка. Получаем "False"
console.log([] + falsе - null);   //полчаем NaN
console.log([] + falsе - null + true);   //в итоге получаем NaN


/*Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?*/
let y = 1;
let x = y = 2;  //начала присваем Y значение 2, затем всё это присваиваем переменной X. Цепочка идёт справа-налево
alert(x);   //полчаем 2

/*Чему равна сумма [ ] + 1 + 2?*/
//здесь получается 12, т.к. пустой массив - это строка, строка +1 - получаем "1". Строка "1"+2, получает 12

/*Что выведет этот код: alert( "1"[0] )?*/
//получаем 1, т.к. к каждому элементу строки можно обратиться по его индексу

/*Чему равно 2 && 1 && null && 0 && undefined ?*/
console.log(2 && 1 && null && 0 && undefined);
//оператор && всегда "запинается" на лжи, т.е когда он доходит то false, он и вернёт это false и в итоге мы получаем null


/*Есть ли разница между выражениями? !!( a && b ) и (a && b)?*/
// первое будет отрицание

/*Что выведет этот код: alert( null || 2 && 3 || 4 ); ?*/
//2 && 3 - здесь вернётся последнее значение, т.е.3
//ИЛИ запинается на правде, поэтому null || 2 && 3 || тоже будет равно3
// 3 || 4 - здесь получается тоже 3

/*a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?*/
const a = [1, 2, 3];
const b = [1, 2, 3];
// это разные хранилища информации, с разными данными, поэтому они не равны

/*Что выведет этот код: alert( +"Infinity" ); ?*/
// Infinity, но будет тип данных число

/*Верно ли сравнение: "Ёжик" > "яблоко"?*/
//первое в сравнении будет Ёжик, т.к. сравнение идёт по 1 букве , а Ё в алфавите раньше чем Я

/*Чему равно 0 || "" || 2 || undefined || true || falsе ?*/
//выражение = 2, т.к. ИЛИ запинается на правде

